/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from './stencil.core';


export namespace Components {
  interface WfBridge {
    'theme': string;
  }
  interface WfTestComponent {
    'addFavoriteItemsCallback': any;
    'broadcastInMessageForwarderCallback': any;
    'checkFencedStatusCallback': any;
    'closeDialogCallback': any;
    'displayWidgetDisclaimerCallback': any;
    'errorCallback': any;
    'exportToCSVCallback': any;
    'exportToPDFCallback': any;
    'findExistingFavoriteItemCallback': any;
    'getActionMenuCallback': any;
    'getActivePageLabelCallback': any;
    'getContextDataCallback': any;
    'getCurrentPageIdCallback': any;
    'getDefaultClientPageCallback': any;
    'getEntitlementsCallback': any;
    'getFavoriteItemsCallback': any;
    'getNavItemByComponentNameCallback': any;
    'getRecentItemsCallback': any;
    'getWidgetDisclaimersCallback': any;
    'getWindowScreenTopCallback': any;
    'hideWidgetCallback': any;
    'hideWidgetDisclaimerCallback': any;
    'logAuditCallback': any;
    'logCallback': any;
    'logSystemErrorCallback': any;
    'loggedOutCallback': any;
    'onComponentLoaded': any;
    'openPageCallback': any;
    'printPDFCallback': any;
    'reloadPageCallback': any;
    'removeFromFavoritesCallback': any;
    'renameFavoriteItemCallback': any;
    'reorderFavoriteCallback': any;
    'savePersonalizationCallback': any;
    'saveToFavoritesCallback': any;
    'saveWidgetStateCallback': any;
    'setBusyCallback': any;
    'setContextCallback': any;
    'setHeaderLayoutCallback': any;
    'setSafeToCloseCallback': any;
    'showWidgetCallback': any;
    'subscribeToMessageForwarderCallback': any;
    'systemMessageCallback': any;
  }
}

declare global {


  interface HTMLWfBridgeElement extends Components.WfBridge, HTMLStencilElement {}
  var HTMLWfBridgeElement: {
    prototype: HTMLWfBridgeElement;
    new (): HTMLWfBridgeElement;
  };

  interface HTMLWfTestComponentElement extends Components.WfTestComponent, HTMLStencilElement {}
  var HTMLWfTestComponentElement: {
    prototype: HTMLWfTestComponentElement;
    new (): HTMLWfTestComponentElement;
  };
  interface HTMLElementTagNameMap {
    'wf-bridge': HTMLWfBridgeElement;
    'wf-test-component': HTMLWfTestComponentElement;
  }
}

declare namespace LocalJSX {
  interface WfBridge extends JSXBase.HTMLAttributes<HTMLWfBridgeElement> {
    'theme'?: string;
  }
  interface WfTestComponent extends JSXBase.HTMLAttributes<HTMLWfTestComponentElement> {
    'addFavoriteItemsCallback'?: any;
    'broadcastInMessageForwarderCallback'?: any;
    'checkFencedStatusCallback'?: any;
    'closeDialogCallback'?: any;
    'displayWidgetDisclaimerCallback'?: any;
    'errorCallback'?: any;
    'exportToCSVCallback'?: any;
    'exportToPDFCallback'?: any;
    'findExistingFavoriteItemCallback'?: any;
    'getActionMenuCallback'?: any;
    'getActivePageLabelCallback'?: any;
    'getContextDataCallback'?: any;
    'getCurrentPageIdCallback'?: any;
    'getDefaultClientPageCallback'?: any;
    'getEntitlementsCallback'?: any;
    'getFavoriteItemsCallback'?: any;
    'getNavItemByComponentNameCallback'?: any;
    'getRecentItemsCallback'?: any;
    'getWidgetDisclaimersCallback'?: any;
    'getWindowScreenTopCallback'?: any;
    'hideWidgetCallback'?: any;
    'hideWidgetDisclaimerCallback'?: any;
    'logAuditCallback'?: any;
    'logCallback'?: any;
    'logSystemErrorCallback'?: any;
    'loggedOutCallback'?: any;
    'onComponentLoaded'?: any;
    'openPageCallback'?: any;
    'printPDFCallback'?: any;
    'reloadPageCallback'?: any;
    'removeFromFavoritesCallback'?: any;
    'renameFavoriteItemCallback'?: any;
    'reorderFavoriteCallback'?: any;
    'savePersonalizationCallback'?: any;
    'saveToFavoritesCallback'?: any;
    'saveWidgetStateCallback'?: any;
    'setBusyCallback'?: any;
    'setContextCallback'?: any;
    'setHeaderLayoutCallback'?: any;
    'setSafeToCloseCallback'?: any;
    'showWidgetCallback'?: any;
    'subscribeToMessageForwarderCallback'?: any;
    'systemMessageCallback'?: any;
  }

  interface IntrinsicElements {
    'wf-bridge': WfBridge;
    'wf-test-component': WfTestComponent;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


